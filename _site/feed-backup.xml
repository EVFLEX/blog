<?xml version="1.0" encoding="utf-8"?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>EVflex</title>
    <description></description>
    <link>http://EVflex.org/</link>
    <atom:link href="http://EVflex.org/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 28 Jul 2015 18:26:15 +0200</pubDate>
    <lastBuildDate>Tue, 28 Jul 2015 18:26:15 +0200</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Jekyll Themes</title>
        <description>&lt;h1 id=&quot;r-markdown-for-reproducible-science&quot;&gt;R markdown for reproducible science&lt;/h1&gt;
&lt;p&gt;Ideally the reader of a scientific article is able to reproduce the experiment based on the contents of the article. With R the writer can come a long way because R itself is freely available and the instructions are compact enough to include in documents.&lt;/p&gt;

&lt;p&gt;This creates certain demands:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Source should be easy to read and write&lt;/li&gt;
  &lt;li&gt;Source can mix:
    &lt;ul&gt;
      &lt;li&gt;Text meant for humans&lt;/li&gt;
      &lt;li&gt;Pictures, graphs and links&lt;/li&gt;
      &lt;li&gt;Computer code that is executed on compile&lt;/li&gt;
      &lt;li&gt;Computer code that is displayed to humans&lt;/li&gt;
      &lt;li&gt;Mathematical formula’s displayed to humans&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Source can directly compile to both web and print&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;R markdown tries to fulfull those demands. It is easy to read and write. Using packages like knitr it can be compiled to web documents (HTML), print (PDF) and - if need be - Word. Computer code can be shown and executed within the document, either as short command “inline”” or complete “code chunk”. For mathematical formula’s we can insert Latex, both inline and in separate chunks.&lt;/p&gt;

&lt;h1 id=&quot;visualising-science&quot;&gt;Visualising science&lt;/h1&gt;
&lt;p&gt;Before we choose a theme we should learn from the past. How have others visualised science?&lt;/p&gt;

&lt;h2 id=&quot;tufte&quot;&gt;Tufte&lt;/h2&gt;
&lt;p&gt;In data analysis the most famous author is probably Edward Tufte who is often treated as the high priest of data visualisation.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;&lt;em&gt;“Above all else show the data”&lt;/em&gt;&lt;/strong&gt;&lt;br /&gt;
&lt;a href=&quot;https://bianalystblog.wordpress.com/2013/04/06/above-all-else-show-the-data-edward-tufte/&quot;&gt;Edward Tufte&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;His “Rules” are beautifully illustrated interactively &lt;a href=&quot;http://www.sealthreinhold.com/school/tuftes-rules/&quot;&gt;here&lt;/a&gt; but in short:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Show Your Data&lt;/li&gt;
  &lt;li&gt;Use Graphics: “Only a picture can carry such a volume of data in such as small space.”&lt;/li&gt;
  &lt;li&gt;Avoid Chartjunk: “Chartjunk can turn bores into disasters, but it can never rescue a thin data set.”&lt;/li&gt;
  &lt;li&gt;Utilize Data-ink.&lt;/li&gt;
  &lt;li&gt;Use Labels.&lt;/li&gt;
  &lt;li&gt;Utilize Micro/Macro: “To clarify, add detail.”&lt;/li&gt;
  &lt;li&gt;Separate Layers: “What matters—inevitably, unrelentingly—is the proper relationship among information layers.”&lt;/li&gt;
  &lt;li&gt;Utilize Multiples: “Constancy of design puts the emphasis on changes in data, not changes in data frames.”&lt;/li&gt;
  &lt;li&gt;Utilize Color: but “Above all, do no harm.”&lt;/li&gt;
  &lt;li&gt;Understand Narrative.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;the-latex-community&quot;&gt;The Latex community&lt;/h2&gt;
&lt;p&gt;The Latex community is known for its eye for detail when it comes to typesetting and visualising data. This &lt;a href=&quot;http://tex.stackexchange.com/questions/1319/showcase-of-beautiful-typography-done-in-tex-friends&quot;&gt;stackexchange discussion&lt;/a&gt; is a nice examlple. Here there is also mention of Motion Mountain: “Wonder and Thrill on Every Page”. You can download all six beautiful volumes for free at &lt;a href=&quot;http://www.motionmountain.net/&quot;&gt;motionmountain.net&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If we dive into &lt;a href=&quot;https://www.sharelatex.com/templates/journals&quot;&gt;Latex templates for yournals&lt;/a&gt; what is clear in my mind how &lt;em&gt;boring&lt;/em&gt; and &lt;em&gt;distancing&lt;/em&gt; all the typesetting is. Tufte encourages us to bring ourselves and our readers as close as possible to the data. We really have to get a feel for the data. This means leaving out rectangles &lt;a href=&quot;https://www.sharelatex.com/templates/52fb896f33621a613683ec93/v/2/pdf?inline=true&amp;amp;name=MNRAS%20%28Oxford%20University%20Press%29&quot;&gt;like around this sinus&lt;/a&gt;, especially when combined with &lt;a href=&quot;https://www.sharelatex.com/templates/52fb87dd33621a613683ec84/v/1/pdf?inline=true&amp;amp;name=ICML&quot;&gt;garish colors&lt;/a&gt;. Using &lt;a href=&quot;https://www.sharelatex.com/templates/52fe01e834a287a85245b4cf/v/1/pdf?inline=true&amp;amp;name=VLDB%20Paper&quot;&gt;simple pictures&lt;/a&gt; can bring topics to life or &lt;a href=&quot;https://www.sharelatex.com/templates/537363fe196e12e838a758ce/v/1/pdf?inline=true&amp;amp;name=British%20Machine%20Vision%20Conference%20%28BMVC%29%20Extended%20Abstract&quot;&gt;tell the entire story&lt;/a&gt;. What triggered me most is how &lt;a href=&quot;https://www.sharelatex.com/templates/52fb8e0b33621a613683ecba/v/1/pdf?inline=true&amp;amp;name=Central%20European%20Journal%20of%20Mathematics&quot;&gt;this journal&lt;/a&gt; profits visually from using just one support color. I wonder why - in this modern age - this is not standard practice for journals, especially ones where colour images are permitted anyway.&lt;/p&gt;

&lt;p&gt;All in all and for all its worship of Edward Tufte the Latex community seems to treat the data with a stiff upper lip instead of with the passion and love that Tufte teaches.&lt;/p&gt;

&lt;h2 id=&quot;one-page-theming&quot;&gt;One page theming&lt;/h2&gt;
&lt;p&gt;Once we decide we are better off with one column the question become how to make such a long column a good experience for the reader. Maybe we can learn something from the templates for one page websites. The harvest is meagre but here are some impressions.&lt;/p&gt;

&lt;p&gt;Scrolling over a background image that seems to move at a different speed is all the rage. It it highly noticable and can give you an almost visceral perception of motion but. But it is also distracting and a bit kitchy so I think we should pass (&lt;a href=&quot;http://demo.rocknrolladesigns.com/html/jarvis/&quot;&gt;here&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Different shades of grey can cleanly separate parts of the page(&lt;a href=&quot;http://demo.imransdesign.com/unika/&quot;&gt;here&lt;/a&gt; &lt;a href=&quot;http://www.templategarden.com/preview/alpha/template/index.html&quot;&gt;here&lt;/a&gt; &lt;a href=&quot;http://ironsummitmedia.github.io/startbootstrap-agency/&quot;&gt;here&lt;/a&gt; &lt;a href=&quot;http://make-lemonade.co/themes/?theme=Booker&quot;&gt;here&lt;/a&gt; &lt;a href=&quot;https://onepagelove.com/oneengine&quot;&gt;here&lt;/a&gt;and very subtly) &lt;a href=&quot;http://themeforest.net/item/quickstep-responsive-one-page-portfolio-theme/full_screen_preview/3237426&quot;&gt;here&lt;/a&gt;). Maybe we should strive to subtly change the background colour from one section to the next?&lt;/p&gt;

&lt;p&gt;Although… very recognizable and consistently coloured headers can do something similar (&lt;a href=&quot;https://onepagelove.com/klim&quot;&gt;here&lt;/a&gt;)&lt;/p&gt;

&lt;h2 id=&quot;jekyll-themes&quot;&gt;Jekyll themes&lt;/h2&gt;
&lt;p&gt;With that out of the way lets turn to available Jekyll themes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;http://jekyllthemes.org/&lt;/a&gt;&lt;br /&gt;
De bron van deze themes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://clayh53.github.io/tufte-jekyll/&quot;&gt;http://clayh53.github.io/tufte-jekyll/&lt;/a&gt; 7&lt;br /&gt;
Mooi minimalistisch. Misschien goed om hier een lettertype van te kopieren. Jammer dat het geen drawer heeft en dat het zo duidelijk bedacht is in een tijd dat responsive nog niet speelde. En ik denk dat twee kolommen simpelweg geen goed idee is voor een site waarin je het simpel wil houden.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sgentile.it/Travelogue/&quot;&gt;http://sgentile.it/Travelogue/&lt;/a&gt; 8.5&lt;br /&gt;
Prachtig minimalistisch: paar plaatjes met een korte titel en datum. Menu onder de knop rechts. Wat een rust! En de post zijn ook erg mooi wat mij betreft. (Scrollable code…)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mmistakes.github.io/hpstr-jekyll-theme/&quot;&gt;http://mmistakes.github.io/hpstr-jekyll-theme/&lt;/a&gt; 8.3&lt;br /&gt;
Nette half-minimalistische site met drawer en briefkaarten.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://mmistakes.github.io/so-simple-theme/&quot;&gt;http://mmistakes.github.io/so-simple-theme/&lt;/a&gt; 7.8&lt;br /&gt;
Simpel en toch mooi. Alleen die cirkel die ik eerst zo mooi vond gaat op je zenuwen werken.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.jacoporabolini.com/emerald/&quot;&gt;http://www.jacoporabolini.com/emerald/&lt;/a&gt; 7.5&lt;br /&gt;
Mooi minimalistisch. Zelfs de knop helaas.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Erg mooi.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://brianmaierjr.com/long-haul/&quot;&gt;http://brianmaierjr.com/long-haul/&lt;/a&gt; 7&lt;br /&gt;
Wel een beetje saai.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Erg mooi.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://gayan.me/gaya/&quot;&gt;http://gayan.me/gaya/&lt;/a&gt; 7&lt;br /&gt;
Mooi die minimalistische button naar de drawer links.
Die witte minimalistische strook op een grijze achtergrond met prima lettertypes is ook mooi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sparanoid.com/lab/amsf/&quot;&gt;http://sparanoid.com/lab/amsf/&lt;/a&gt; 6.5&lt;br /&gt;
Almace Scaffolding. Grote duidelijke letters en dynamische onderstreping maar het klikt bij Iris meer dan bij mij.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;De mooiste!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://jekyll.gtat.me/&quot;&gt;http://jekyll.gtat.me/&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Erg mooi.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        <pubDate>Mon, 27 Jul 2015 00:00:00 +0200</pubDate>
        <link>http://EVflex.org/jekyll-themes/</link>
        <guid isPermaLink="true">http://EVflex.org/jekyll-themes/</guid>
        
        <category>home</category>
        
        <category>work</category>
        
        <category>office</category>
        
        <category>coding</category>
        
        <category>design</category>
        
        
        <category>development</category>
        
        <category>work</category>
        
      </item>
    
      <item>
        <title>Installing Jekyll and Github pages</title>
        <description>&lt;p&gt;&lt;strong&gt;I wanted to create my website using Github pages and Jeckyll. Here’s how I did it.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;jekyllrb.com&quot;&gt;Jekyllrb&lt;/a&gt; is supposed to be the comprehensive reference for this but because I wanted something quick that took my by the hand I followed along with this &lt;a href=&quot;https://youtu.be/nN6QuNqmAwk&quot;&gt;video by Brad Westfall&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;make-powershell-default&quot;&gt;Make powershell default&lt;/h3&gt;
&lt;p&gt;First I made powershell the default command line on my windows machine. Simply install powershell and run the &lt;a href=&quot;http://blogs.interfacett.com/how-make-powershell-default-console-windows-server-core&quot;&gt;first script on this page&lt;/a&gt;. Powershell can do much more than your regular command line. Two examples: it supports cut-and-paste and shows you which branch you are in.&lt;/p&gt;

&lt;h3 id=&quot;create-a-hello-world-page&quot;&gt;Create a hello world page&lt;/h3&gt;
&lt;p&gt;I opened github for windows and (using the gearwheel) opened the github shell. Powershell opened for me in the right directory (github root). Then I typed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir evflex        # to create a directory
cd blog             # go into the directory
git init            # to create the repo (.git files) here
touch index.html    # to create the index file that github will look for
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For testing an empty index.html file is not optimal. So I opened it in an editor (like atom or notepad) and typed:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;HTML&amp;gt;
   &amp;lt;HEAD&amp;gt;
      &amp;lt;TITLE&amp;gt;
         evflex says hello
      &amp;lt;/TITLE&amp;gt;
   &amp;lt;/HEAD&amp;gt;
&amp;lt;BODY&amp;gt;
   &amp;lt;H1&amp;gt;evflex are go&amp;lt;/H1&amp;gt;
   &amp;lt;P&amp;gt;Hello evflex readers!&amp;lt;/P&amp;gt;
&amp;lt;/BODY&amp;gt;
&amp;lt;/HTML&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I saved my changes, closed the editor and switched back to powershell. I added the file and made my initial commit:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add .
git commit -m &quot;init&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I went to github.com to create the remote repo on github. I chose create new repo, typed in evflex, unchecked “make readme.md” and on the next page there was a command for when you already have a local repo. This I pasted into my local powershell with rightclick:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git remote add origin git@github.com:AukeHoekstra/evflex.git
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This tells the local repo where to find its remote repo on github and it pushes the first content (the index.html file) to the remote repo.&lt;/p&gt;

&lt;p&gt;Finally I created a branch called gh-pages. This special branch is where the Jekyll server on github.com will be looking for new content. From this branche I pushed the index.html page to github:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch gh-pages
git push origin gh-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That is basically it. After a few minutes (it can take hours) I surfed to the following location to admire my message to the world:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;aukehoekstra.github.io/evflex.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;connect-evflexgithubio-to-evflexorg&quot;&gt;Connect evflex.github.io to evflex.org&lt;/h3&gt;
&lt;p&gt;Buy .org and .com, .net, .nl and .eu.
Redirect .org to github.
Redirect .com, .net, .nl and .eu to .org.&lt;/p&gt;

&lt;p&gt;The video says to create a file called “CNAME” with as content just the URL where you want to point from. E.g. evflex.org. Then:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add .
git commit -m &quot;cname&quot;
git checkout gh-pages # switches you to the gh-pages branch
git merge master # merges cname file of the master into gh-pages
git push --set-upstream origin gh-pages
git push # puts the content of gh-pages on github
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first time I failed because the video did not prompt me to set the upstream branch. But this worked so to check I went to github.com, refreshed the page and saw that CNAME showed up in the branch.&lt;/p&gt;

&lt;p&gt;Another problem I ran into was that github kept warning me that it had added Github (RSA) to the list of known hosts. Jeremiah Gowdy came up with &lt;a href=&quot;http://stackoverflow.com/questions/9299651/warning-permanently-added-to-the-list-of-known-hosts-message-from-git&quot;&gt;the solution on stackoverflow&lt;/a&gt;: go to users\Auke.ssh and add a file called config with the line “UserKnownHostsFile ~/.ssh/known_hosts”. Problem solved.&lt;/p&gt;

&lt;p&gt;The final step is to tell the registrar to point to Github. In my case this is Byte.nl. So I surfed to their service panels DNS settings and create the following records:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;evflex.org, type A, content 192.30.252.153
evflex.org, type A, content 192.30.252.154
www.evflex.org, type CNAME, content evflex.org
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This can take up to 24 hours but within a minute I could type &lt;evflex.org&gt; and &lt;www.evflex.org&gt; and I was taken directly to my Hello world page at aukehoekstra.github.io/evflex without me (or my reader) noticing.&lt;/www.evflex.org&gt;&lt;/evflex.org&gt;&lt;/p&gt;

&lt;h3 id=&quot;install-jekyll&quot;&gt;Install Jekyll&lt;/h3&gt;
&lt;p&gt;Windows is not officially supported (?) but I was directed to &lt;a href=&quot;http://jekyll-windows.juthilo.com/&quot;&gt;http://jekyll-windows.juthilo.com/&lt;/a&gt;. This site told me to to to &lt;a href=&quot;http://rubyinstaller.org/downloads/&quot;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt; and install Ruby and the Devkit (like DevKit-mingw64). I had to restart the computer before I could give the following commands in powershell:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd c:\Ruby22-x64start
ruby dk.rb init
ruby dk.rb install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then I installed Python version 2 (!). Don’t forget to choose “add python.exe to path” as a complete install on the harddrive. This will also give you pip. Finally we do:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install jekyll # takes a while
cd c:\users\auke\github
jekyll new blog # lots of files into the blog
cd blog
jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Surf to the ip number that Jekyll shows in powershell and convince yourself: &lt;strong&gt;Jekyll is up and running!&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Jul 2015 00:00:00 +0200</pubDate>
        <link>http://EVflex.org/installing-jekyll/</link>
        <guid isPermaLink="true">http://EVflex.org/installing-jekyll/</guid>
        
        
      </item>
    
      <item>
        <title>Git Document Management</title>
        <description>&lt;p&gt;&lt;img src=&quot;../Pics/Felicia_Day_Librarian_Widescreen.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I think the use of coders jargon clouds the fact Git is also perfect for “normal” people that want document management and collaboration for “normal” documents. E.g. lawwyers, writers, consultants and people working together on projects. This post uses the metaphor of a public library.&lt;/strong&gt;&lt;/p&gt;

&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;Programmers (or “coders”) are notoriously precise about managing their code: one typo and nothing works anymore. One of the best programs for managing code is called Git. It was developed by Linus Thorvalts to manage the development of Linux. But what is Git exactly?&lt;/p&gt;

&lt;p&gt;You probably know that it is a good idea to save your work in case your program crashes and to make a backup in case your hard drive crashes. Git does not change that. For you personally, Git is about taking snapshots of your files so you can return to that moment at any time in the future. For a team, Git is about working together without getting in each others way.&lt;/p&gt;

&lt;p&gt;Do you keep multiple versions of documents? Do you wish you had more insight in what you where doing with them a year ago? Do you need to work on documents with others? Then Git can simplify your life. Imagine Git as your personal librarian.&lt;/p&gt;

&lt;h1 id=&quot;version-management&quot;&gt;Version management&lt;/h1&gt;
&lt;p&gt;Imagine standing in your private library. Around you are all the important versions of all the documents you have ever worked on. Every time you archived a set of documents they where bound into a book that appears in this library. Git also added a first page to each book with a description of what’s inside:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The documents in the book and their authors.&lt;/li&gt;
  &lt;li&gt;The reason this set of documents was put in the library.&lt;/li&gt;
  &lt;li&gt;Who committed the book to the library and when.&lt;/li&gt;
  &lt;li&gt;The relation with books that where committed to the library earlier.&lt;/li&gt;
  &lt;li&gt;A clever way to check that the contents of the book have not been tampered with.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Working with Git becomes straighforward with this mental image in mind:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Put a number of documents together. This is called “&lt;strong&gt;staging&lt;/strong&gt;”.&lt;/li&gt;
  &lt;li&gt;Write a short message and send message+documents to your librarian. She writes the title page, binds everything together, and commits the book to your library. This process is called “&lt;strong&gt;committing&lt;/strong&gt;” and happens with one click or command.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The library is called a “&lt;strong&gt;repository&lt;/strong&gt;”” or “repo” in Git lingo. When you encounter the word repository you can imagine a library in your mind.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../Pics/Private_Library.jpg&quot; alt=&quot;private library&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Maybe staging seems unnecesary to you and when you are working on one unconnected document it is. But often you are working on multiple documents at once. E.g. a Word document containing graphs from an Excel spreadsheet. Isn’t it neat that you can easily commit a set of documents belonging so you can return to their corresponding versions later?&lt;/p&gt;

&lt;p&gt;Working with Git feels alien the first week or so. And it takes a tiny bit more effort than just saving your document. You also have to click stage, then click commit and then type in your commit message. But with those three simple actions (it takes less than five seconds) you commit a new tamperproof book with extensive information about its history to your library forever. You can retrace your steps at any future moment in time. And you no longer need backup copies or multiple filenames for versions of your documents. So the library cleans up your workspace.&lt;/p&gt;

&lt;h1 id=&quot;your-library-on-github&quot;&gt;Your library on Github&lt;/h1&gt;
&lt;p&gt;Github is basically a place to store Git libraries online. There are many such services but Github is the largest and when you are all about openness and sharing it is probably your first choice. If you want to create a lot of private libraries you might take a look at other services like bitbucket.&lt;/p&gt;

&lt;p&gt;Once you know how to “publish” all your books to an online library you get two extra commands or buttons. One to upload/push your books/commits to your online library/repository. One to download/pull them from your online library.&lt;/p&gt;

&lt;p&gt;Publishing a library on Github gives you several extra possibilities:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You have a copy of your library when something goes awry with your local copy.&lt;/li&gt;
  &lt;li&gt;You can access your files from every device with an Internet connection.&lt;/li&gt;
  &lt;li&gt;You can choose to give others access to your library so they can borrow your books.&lt;/li&gt;
  &lt;li&gt;You can create a website where the last versions are displayed with nice formatting.&lt;/li&gt;
  &lt;li&gt;You can make it a shared library where others can also store books. Let’s look at that last point in some more detail.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;sharing-the-same-library&quot;&gt;Sharing the same library&lt;/h1&gt;
&lt;p&gt;If you work together with others on documents, chances are that you often email each other new versions. This works remarkably well compared to snailmail but it is still time consuming and messy. Have you included the right persions in your email? Has everybody else? What is now the latest version? Is there one latest version or are there multiple authors with diverging versions? How do you know that you can find all emails with changes when everybody uses different words in the mail and different filenames for their versions? Et cetera.&lt;/p&gt;

&lt;p&gt;A shared directory (e.g. Dropbox) is often an improvement to email. But how do you know who updated the document when and for what reason? Dropbox does not exactly give you a nice version history. And how do you get notified something changed? Dropbox can do this automatically but do you want email everytime someone makes a small change? And don’t you want to work on the document in private sometimes? So the usual solution is to save new versions of the document in the Dropbox folder under a new name and tell everybody about it through email. This kind of brings us back to square one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../Pics/shared_public_library.jpg&quot; alt=&quot;public library&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With Git you have a shared public library with all the bells and whistles. Just stick to your simple stage-commit routine and Git takes care of the rest. With Git you have access to all versions of each others books with a crystal clear version history. You can get an email everytime someone makes a commit or you can just dive into the repository when you feel like it. Either way you can get to work right away with the whole document history at your fingertips.&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Jul 2015 00:00:00 +0200</pubDate>
        <link>http://EVflex.org/git-document-management/</link>
        <guid isPermaLink="true">http://EVflex.org/git-document-management/</guid>
        
        <category>home</category>
        
        <category>work</category>
        
        <category>office</category>
        
        <category>coding</category>
        
        <category>design</category>
        
        
        <category>development</category>
        
        <category>work</category>
        
      </item>
    
  </channel>
</rss>
